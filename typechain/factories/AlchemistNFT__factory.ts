/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AlchemistNFT, AlchemistNFTInterface } from "../AlchemistNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_alchemist",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nftWrapper",
        type: "address",
      },
      {
        internalType: "address",
        name: "_jpeg",
        type: "address",
      },
      {
        internalType: "address",
        name: "_dai",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pUsd",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "Curve",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "usdtIndex",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "usdcIndex",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "daiIndex",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "pUsdIndex",
            type: "uint8",
          },
        ],
        internalType: "struct AlchemistNFT.CurveData",
        name: "_curveData",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
    ],
    name: "NFTAlreadyUsed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "Alchemist",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "NFTWrapper",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "Jpeg",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "Curve",
        type: "address",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "Alchemist",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DAI",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Jpeg",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NFTWrapper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "curveData",
    outputs: [
      {
        internalType: "address",
        name: "Curve",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "usdtIndex",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "usdcIndex",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "daiIndex",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "pUsdIndex",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nftId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "swap",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountToBorrow",
        type: "uint256",
      },
    ],
    name: "lockNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pUsd",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101206040523480156200001257600080fd5b5060405162000d1438038062000d1483398101604081905262000035916200026b565b600054610100900460ff16620000525760005460ff16156200005c565b6200005c62000218565b620000c45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015620000e7576000805461ffff19166101011790555b6001600160a01b03878116608081815288831660a081815289851660c0819052604080519283018152885187168084526020808b015160ff9081168287018190528c850151821687860181905260608e8101518416818a018190528f8c015190941698909a01889052600180546001600160a81b031916909517600160a01b9092029190911761ffff60a81b1916600160a81b90910260ff60b01b191617600160b01b9091021760ff60b81b198116600160b81b9096029586179092558c8916610100528b891660e052825195865285019290925290861691909516179381019390935290917f3514319b7a526ad5f1f42edf0c1df25fa0ea2ae054779987fbe636f164515e2f910160405180910390a280156200020b576000805461ff00191690555b5050505050505062000388565b600062000230306200023660201b620006c41760201c565b15905090565b3b151590565b80516001600160a01b03811681146200025457600080fd5b919050565b805160ff811681146200025457600080fd5b6000806000806000808688036101408112156200028757600080fd5b62000292886200023c565b9650620002a2602089016200023c565b9550620002b2604089016200023c565b9450620002c2606089016200023c565b9350620002d2608089016200023c565b925060a0609f1982011215620002e757600080fd5b5060405160a081016001600160401b03811182821017156200031957634e487b7160e01b600052604160045260246000fd5b6040526200032a60a089016200023c565b81526200033a60c0890162000259565b60208201526200034d60e0890162000259565b604082015262000361610100890162000259565b606082015262000375610120890162000259565b6080820152809150509295509295509295565b60805160a05160c05160e0516101005161091e620003f6600039600081816101f7015281816104ba01526105f9015260008181610194015281816102bf01526103da0152600081816082015261035d01526000818161016d015261023b015260006101bb015261091e6000f3fe608060405234801561001057600080fd5b50600436106100785760003560e01c806307e65b3f1461007d57806314459257146100ba578063150b7a021461013157806366053a76146101685780639eb723651461018f578063ab7efa03146101b6578063b1bee97f146101dd578063e0bab4c4146101f2575b600080fd5b6100a47f000000000000000000000000000000000000000000000000000000000000000081565b6040516100b19190610724565b60405180910390f35b6001546100f7906001600160a01b0381169060ff600160a01b8204811691600160a81b8104821691600160b01b8204811691600160b81b90041685565b604080516001600160a01b03909616865260ff9485166020870152928416928501929092528216606084015216608082015260a0016100b1565b61014f61013f36600461076a565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020016100b1565b6100a47f000000000000000000000000000000000000000000000000000000000000000081565b6100a47f000000000000000000000000000000000000000000000000000000000000000081565b6100a47f000000000000000000000000000000000000000000000000000000000000000081565b6101f06101eb366004610845565b610219565b005b6100a47f000000000000000000000000000000000000000000000000000000000000000081565b6102243385856106ca565b604051632142170760e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906342842e0e9061027490339030908890600401610889565b600060405180830381600087803b15801561028e57600080fd5b505af11580156102a2573d6000803e3d6000fd5b50506040516370a0823160e01b8152600092506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691506370a08231906102f5903090600401610724565b602060405180830381865afa158015610312573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033691906108ad565b604051630f6f283360e01b81526004810186905260248101849052600060448201529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690630f6f283390606401600060405180830381600087803b1580156103a957600080fd5b505af11580156103bd573d6000803e3d6000fd5b50506040516370a0823160e01b8152600092506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691506370a0823190610410903090600401610724565b602060405180830381865afa15801561042d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045191906108ad565b90508181116104a05760405162461bcd60e51b8152602060048201526016602482015275424f52524f5720505553442057454e542057524f4e4760501b60448201526064015b60405180910390fd5b6040516370a0823160e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a08231906104ef903090600401610724565b602060405180830381865afa15801561050c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053091906108ad565b6001549091506001600160a01b03811690635b41b9089060ff600160b81b8204811691600160b01b9004166105666002876108c6565b6040516001600160e01b031960e086901b16815260ff93841660048201529290911660248301526044820152600060648201526084016020604051808303816000875af11580156105bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105df91906108ad565b506040516370a0823160e01b815281906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319061062e903090600401610724565b602060405180830381865afa15801561064b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066f91906108ad565b116106bb5760405162461bcd60e51b815260206004820152601c60248201527b505553442d4441492045584348414e47452057454e542057524f4e4760201b6044820152606401610497565b50505050505050565b3b151590565b6001600160a01b0383811660009081526002602090815260408083209386168352928152828220848352600101905220541561071f578282826040516302f7d42760e01b815260040161049793929190610889565b505050565b6001600160a01b0391909116815260200190565b80356001600160a01b038116811461074f57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561078057600080fd5b61078985610738565b935061079760208601610738565b92506040850135915060608501356001600160401b03808211156107ba57600080fd5b818701915087601f8301126107ce57600080fd5b8135818111156107e0576107e0610754565b604051601f8201601f19908116603f0116810190838211818310171561080857610808610754565b816040528281528a602084870101111561082157600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806000806080858703121561085b57600080fd5b61086485610738565b93506020850135925061087960408601610738565b9396929550929360600135925050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6000602082840312156108bf57600080fd5b5051919050565b6000826108e357634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220c863414ab736e54404fa82da6ccf9ce7719a854a80a25064045b5b4ba906cd4764736f6c634300080b0033";

export class AlchemistNFT__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _alchemist: string,
    _nftWrapper: string,
    _jpeg: string,
    _dai: string,
    _pUsd: string,
    _curveData: {
      Curve: string;
      usdtIndex: BigNumberish;
      usdcIndex: BigNumberish;
      daiIndex: BigNumberish;
      pUsdIndex: BigNumberish;
    },
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AlchemistNFT> {
    return super.deploy(
      _alchemist,
      _nftWrapper,
      _jpeg,
      _dai,
      _pUsd,
      _curveData,
      overrides || {}
    ) as Promise<AlchemistNFT>;
  }
  getDeployTransaction(
    _alchemist: string,
    _nftWrapper: string,
    _jpeg: string,
    _dai: string,
    _pUsd: string,
    _curveData: {
      Curve: string;
      usdtIndex: BigNumberish;
      usdcIndex: BigNumberish;
      daiIndex: BigNumberish;
      pUsdIndex: BigNumberish;
    },
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _alchemist,
      _nftWrapper,
      _jpeg,
      _dai,
      _pUsd,
      _curveData,
      overrides || {}
    );
  }
  attach(address: string): AlchemistNFT {
    return super.attach(address) as AlchemistNFT;
  }
  connect(signer: Signer): AlchemistNFT__factory {
    return super.connect(signer) as AlchemistNFT__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AlchemistNFTInterface {
    return new utils.Interface(_abi) as AlchemistNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AlchemistNFT {
    return new Contract(address, _abi, signerOrProvider) as AlchemistNFT;
  }
}
