/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AlchemistNFT, AlchemistNFTInterface } from "../AlchemistNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_alchemist",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nftWrapper",
        type: "address",
      },
      {
        internalType: "address",
        name: "_jpeg",
        type: "address",
      },
      {
        internalType: "address",
        name: "_dai",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pUsd",
        type: "address",
      },
      {
        internalType: "address",
        name: "_yDai",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "Curve",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "usdtIndex",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "usdcIndex",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "daiIndex",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "pUsdIndex",
            type: "uint8",
          },
        ],
        internalType: "struct AlchemistNFT.CurveData",
        name: "_curveData",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
    ],
    name: "NFTAlreadyUsed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "Alchemist",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "NFTWrapper",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "Jpeg",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "Curve",
        type: "address",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "Alchemist",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DAI",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Jpeg",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NFTWrapper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "curveData",
    outputs: [
      {
        internalType: "address",
        name: "Curve",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "usdtIndex",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "usdcIndex",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "daiIndex",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "pUsdIndex",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nftId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "swap",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountToBorrow",
        type: "uint256",
      },
    ],
    name: "lockNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pUsd",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yDAI",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

export class AlchemistNFT__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _alchemist: string,
    _nftWrapper: string,
    _jpeg: string,
    _dai: string,
    _pUsd: string,
    _yDai: string,
    _curveData: {
      Curve: string;
      usdtIndex: BigNumberish;
      usdcIndex: BigNumberish;
      daiIndex: BigNumberish;
      pUsdIndex: BigNumberish;
    },
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AlchemistNFT> {
    return super.deploy(
      _alchemist,
      _nftWrapper,
      _jpeg,
      _dai,
      _pUsd,
      _yDai,
      _curveData,
      overrides || {}
    ) as Promise<AlchemistNFT>;
  }
  getDeployTransaction(
    _alchemist: string,
    _nftWrapper: string,
    _jpeg: string,
    _dai: string,
    _pUsd: string,
    _yDai: string,
    _curveData: {
      Curve: string;
      usdtIndex: BigNumberish;
      usdcIndex: BigNumberish;
      daiIndex: BigNumberish;
      pUsdIndex: BigNumberish;
    },
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _alchemist,
      _nftWrapper,
      _jpeg,
      _dai,
      _pUsd,
      _yDai,
      _curveData,
      overrides || {}
    );
  }
  attach(address: string): AlchemistNFT {
    return super.attach(address) as AlchemistNFT;
  }
  connect(signer: Signer): AlchemistNFT__factory {
    return super.connect(signer) as AlchemistNFT__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AlchemistNFTInterface {
    return new utils.Interface(_abi) as AlchemistNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AlchemistNFT {
    return new Contract(address, _abi, signerOrProvider) as AlchemistNFT;
  }
}
